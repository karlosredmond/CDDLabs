.TH "Semaphore" 3 "Wed Sep 27 2017" "Version 1.0" "Lab 1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Semaphore \- A \fBSemaphore\fP Implementation\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'Semaphore\&.h'\fP
.SS "Public Member Functions"
.SS "Private Attributes"
.SH "Detailed Description"
.PP 
A \fBSemaphore\fP Implementation\&. 

Uses C++11 features such as mutex and condition variables to implement \fBSemaphore\fP 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSemaphore\fP (unsigned int uiCount = \fC0\fP)"

.PP
.nf
19           : m_uiCount(uiCount) { };
.fi
.SH "Member Function Documentation"
.PP 
.SS "void Signal ()"

.PP
.nf
31 {
32       std::unique_lock< std::mutex > lock(m_mutex);
33       ++m_uiCount;
34       m_condition\&.notify_one();
35 }
.fi
.SS "void Wait ()"

.PP
.nf
13 {
14       std::unique_lock< std::mutex > lock(m_mutex);
15       m_condition\&.wait(lock,[&]()->bool{ return m_uiCount>0; });
16       --m_uiCount;
17 }
.fi
.SS "bool Wait (const std::chrono::duration<R,P>& crRelTime)"

.PP
.nf
21 {
22       std::unique_lock< std::mutex > lock(m_mutex);
23       if (!m_condition\&.wait_for(lock,crRelTime,[&]()->bool{ return m_uiCount>0; })){
24       return false;
25       }
26       --m_uiCount;
27       return true;
28 }
.fi
.SH "Field Documentation"
.PP 
.SS "std::condition_variable m_condition\fC [private]\fP"

.SS "std::mutex m_mutex\fC [private]\fP"

.SS "unsigned int m_uiCount\fC [private]\fP"

.PP
Holds the \fBSemaphore\fP count\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Lab 1 from the source code\&.
